import{_ as o,p,q as c,s as n,R as s,t as e,Y as a,n as l}from"./framework-c56ab46b.js";const i={},u=n("p",null,[s("掌握各种"),n("code",null,"Web API"),s(" 能够显著提升网络应用程序的功能和用户体验。这些 "),n("code",null,"API"),s(" 为开发者提供了与浏览器交互的强大工具，而这种能力在过去是难以实现的。本文将探讨12种基本的 "),n("code",null,"Web API"),s("，详细解释它们的功能，并提供代码示例，帮助您在项目中轻松实现这些 "),n("code",null,"API"),s("。")],-1),r=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/chnjames/cloudImg/main/Images202409271643600.png",alt:"What-is-an-API"})],-1),d={id:"storage-api",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#storage-api","aria-hidden":"true"},"#",-1),v={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Storage_API",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"Storage API",-1),h=a(`<p><code>Storage API</code>（存储 <code>API</code>）（包括 <code>localStorage</code> 和 <code>sessionStorage</code>）允许开发者在用户的浏览器中以键值对的形式存储数据。这些数据可以用于保存用户的偏好设置、会话信息或其他需要持久化的数据。<code>localStorage</code> 提供长期存储，而 <code>sessionStorage</code> 则在浏览器会话结束后清除数据。存储 <code>API</code> 使得在客户端轻松管理数据变得更加方便，有助于提升用户体验。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 将数据保存到localStorage</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;userName&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;一点一木&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 从localStorage中检索数据</span>
<span class="token keyword">const</span> user <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;userName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 清除localStorage中的数据</span>
localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;userName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),g={id:"dom-api",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#dom-api","aria-hidden":"true"},"#",-1),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"DOM API",-1),I=a(`<p><code>DOM API</code>（文档对象模型 <code>API</code>）允许开发者操作网页的结构、样式和内容。它提供了一组方法和属性，使得可以动态访问和修改<code>HTML</code>文档中的元素，响应用户交互，实现动画效果等。通过<code>DOM API</code>，开发者能够创建、删除和更新网页内容，从而提升用户体验并实现复杂的功能。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 选择并更新元素</span>
<span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
element<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;Hello, World!&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),P={id:"canvas-api",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#canvas-api","aria-hidden":"true"},"#",-1),y={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"Canvas API",-1),x=a(`<p><code>Canvas API</code> 允许开发者在网页上绘制图形和动画，利用 <code>&lt;canvas&gt;</code> 元素实现丰富的视觉效果。它提供了一个灵活的<code>2D</code>或<code>3D</code>绘图上下文，使得创建游戏、数据可视化和其他动态图形变得简单。<code>Canvas API</code> 的强大功能使得开发者可以控制每个像素，创造出高度自定义的视觉内容。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myCanvas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),S={id:"history-api",tabindex:"-1"},z=n("a",{class:"header-anchor",href:"#history-api","aria-hidden":"true"},"#",-1),C={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/History_API",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"History API",-1),T=a(`<p><code>History API</code> 允许开发者与浏览器的会话历史记录进行交互，提供了一种方法来操作历史记录栈。通过使用 <code>pushState</code> 和 <code>replaceState</code> 方法，开发者可以在不重新加载页面的情况下更新URL和状态，从而实现更流畅的单页应用体验。<code>History API</code> 使得浏览器的导航行为更加灵活，用户可以在应用中自由前后导航。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>history<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">page</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/page1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
history<span class="token punctuation">.</span><span class="token function">replaceState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">page</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/page2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),w={id:"clipboard-api",tabindex:"-1"},D=n("a",{class:"header-anchor",href:"#clipboard-api","aria-hidden":"true"},"#",-1),L={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Clipboard_API",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"Clipboard API",-1),N=a(`<p><code>Clipboard API</code> （剪贴板 <code>API</code>）允许开发者访问和操作用户的剪贴板内容，使得实现复制、粘贴等功能变得更加简单。它提供了一种安全的方式来读取和写入剪贴板数据，支持文本、图像等多种格式。这使得在网页应用中实现用户友好的交互体验更加高效和灵活。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, Clipboard!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;文本已复制到剪贴板&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;复制文本失败:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),W={id:"fullscreen-api",tabindex:"-1"},q=n("a",{class:"header-anchor",href:"#fullscreen-api","aria-hidden":"true"},"#",-1),F={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fullscreen_API",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"Fullscreen API",-1),R=a('<p><code>Fullscreen API</code> （全屏 <code>API</code>）允许开发者将特定元素或整个网页以全屏模式呈现，从而提供更沉浸式的用户体验。它常用于视频播放、游戏和其他需要占用整个屏幕的应用。用户可以通过简单的调用请求全屏，并且可以轻松切换回窗口模式，增强了互动性和可视性。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">requestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">启用全屏模式时发生错误: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2),B={id:"formdata-api",tabindex:"-1"},O=n("a",{class:"header-anchor",href:"#formdata-api","aria-hidden":"true"},"#",-1),G={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"FormData API",-1),$=a(`<p><code>FormData API</code> 用于轻松构建和操作表示表单数据的键值对，特别适合用于通过 <code>AJAX</code> 提交表单。它允许开发者收集用户输入，包括文本字段、文件上传等，并以合适的格式发送到服务器。<code>FormData API</code> 使得处理复杂表单数据变得更加简单高效。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/submit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">body</span><span class="token operator">:</span> formData <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;表单提交成功！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),X={id:"fetch-api",tabindex:"-1"},J=n("a",{class:"header-anchor",href:"#fetch-api","aria-hidden":"true"},"#",-1),Y={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"Fetch API",-1),K=a(`<p><code>Fetch API</code> 提供了一种现代化且灵活的方式来进行异步网络请求，作为 <code>XMLHttpRequest</code> 的更简单、基于 <code>Promise</code> 的替代方案。它允许开发者轻松发送 <code>HTTP</code> 请求，处理响应，并进行更复杂的网络交互，如上传文件或处理 <code>JSON</code> 数据。<code>Fetch API</code> 使得网络请求的代码更加清晰和易于维护。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.example.com/data&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;获取数据时发生错误:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Q={id:"drag-and-drop-api",tabindex:"-1"},Z=n("a",{class:"header-anchor",href:"#drag-and-drop-api","aria-hidden":"true"},"#",-1),nn={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API",target:"_blank",rel:"noopener noreferrer"},sn=n("code",null,"Drag and Drop API",-1),an=a(`<p><code>Drag and Drop API</code> （拖放 <code>API</code>）允许开发者在网页应用中实现拖放功能，增强用户交互体验。它提供了一组接口，使得用户可以通过拖动元素来移动、复制或删除内容，常用于实现文件上传、排序列表等功能。通过拖放 <code>API</code>，创建直观的用户界面变得更加简单。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> item <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;item&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
item<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;dragstart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),tn={id:"payment-request-api",tabindex:"-1"},en=n("a",{class:"header-anchor",href:"#payment-request-api","aria-hidden":"true"},"#",-1),on={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Payment_Request_API",target:"_blank",rel:"noopener noreferrer"},pn=n("code",null,"Payment Request API",-1),cn=a(`<p><code>Payment Request API</code> （支付请求 <code>API</code>）用于简化网页上的支付流程，提供一致的用户体验，支持多种支付方式。它允许开发者以用户友好的方式收集支付信息，从而提高在线购物的便利性和安全性。通过该 <code>API</code>，用户可以快速选择支付方式并完成交易。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>PaymentRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> payment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PaymentRequest</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">supportedMethods</span><span class="token operator">:</span> <span class="token string">&#39;https://example.com/pay&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;总金额&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">currency</span><span class="token operator">:</span> <span class="token string">&#39;CNY&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;10.00&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  payment<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 处理支付结果</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;支付失败:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),ln=a(`<li><h4 id="html-sanitizer-api" tabindex="-1"><a class="header-anchor" href="#html-sanitizer-api" aria-hidden="true">#</a> <code>HTML Sanitizer API</code></h4><blockquote><p><code>HTML Sanitizer API</code>是一个<strong>提议中</strong>的新浏览器 <code>API</code>，旨在为网页平台提供一种安全且易于使用的 <code>HTML</code> 清理能力。</p></blockquote><p><code>HTML Sanitizer API</code> （<code>HTML</code> 清理器 <code>API</code>）用于安全地清理不可信的 <code>HTML</code> 内容，以防止安全风险，如跨站脚本（<code>XSS</code>）攻击。它提供了一种简单的方法来处理和过滤用户输入的 <code>HTML</code>，确保只允许安全的内容在网页中显示，从而保护用户和网站的安全。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> dirtyHTML <span class="token operator">=</span> <span class="token string">&#39;&lt;img src=&quot;javascript:alert(1)&quot;&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> cleanHTML <span class="token operator">=</span> sanitizer<span class="token punctuation">.</span><span class="token function">sanitize</span><span class="token punctuation">(</span>dirtyHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cleanHTML<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 安全的HTML输出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),un={id:"geolocation-api",tabindex:"-1"},rn=n("a",{class:"header-anchor",href:"#geolocation-api","aria-hidden":"true"},"#",-1),dn={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Geolocation_API",target:"_blank",rel:"noopener noreferrer"},kn=n("code",null,"Geolocation API",-1),vn=a('<p><code>Geolocation API</code> （地理位置<code>API</code>）允许开发者访问用户设备的地理位置信息，以便实现基于位置的服务和功能。它能够获取用户的当前位置信息（如经度和纬度），并在应用中应用于地图、定位服务或个性化内容。该 <code>API</code> 需要用户授权以确保隐私和安全。</p><blockquote><p><code>Geolocation API</code> 需要在 <code>HTTPS</code> 环境下运行，因此确保您的网站使用 <code>SSL</code> 证书。</p><p><strong>在项目开发过程中测试的方法</strong>：</p><ul><li><strong>使用浏览器开发者工具模拟位置</strong>：在 <code>Chrome</code> 中，打开开发者工具，选择“更多工具” &gt; “传感器”，然后您可以选择模拟的地理位置进行测试。</li></ul></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">position</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">纬度: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>position<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>latitude<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 经度: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>position<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>longitude<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">获取位置时发生错误: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>error<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),mn=a('<h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h4><p>这些<code>Web API</code> 为创建高度互动和用户友好的网页应用开辟了无限可能。从存储和支付到地理位置和图形，掌握这些 <code>API</code> 可以提升您的 <code>Web</code> 开发技能。</p><p>通过有效地在项目中实现这些 <code>API</code>，您可以显著增强功能性和用户体验。</p>',3);function hn(gn,_n){const t=l("ExternalLinkIcon");return p(),c("div",null,[u,r,n("ol",null,[n("li",null,[n("h4",d,[k,s(),n("a",v,[m,e(t)])]),h]),n("li",null,[n("h4",g,[_,s(),n("a",b,[f,e(t)])]),I]),n("li",null,[n("h4",P,[A,s(),n("a",y,[j,e(t)])]),x]),n("li",null,[n("h4",S,[z,s(),n("a",C,[H,e(t)])]),T]),n("li",null,[n("h4",w,[D,s(),n("a",L,[M,e(t)])]),N]),n("li",null,[n("h4",W,[q,s(),n("a",F,[E,e(t)])]),R]),n("li",null,[n("h4",B,[O,s(),n("a",G,[V,e(t)])]),$]),n("li",null,[n("h4",X,[J,s(),n("a",Y,[U,e(t)])]),K]),n("li",null,[n("h4",Q,[Z,s(),n("a",nn,[sn,e(t)])]),an]),n("li",null,[n("h4",tn,[en,s(),n("a",on,[pn,e(t)])]),cn]),ln,n("li",null,[n("h4",un,[rn,s(),n("a",dn,[kn,e(t)])]),vn])]),mn])}const fn=o(i,[["render",hn],["__file","12EssentialWebAPIs.html.vue"]]);export{fn as default};
