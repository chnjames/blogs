import{_ as n,p as s,q as a,Y as t}from"./framework-c56ab46b.js";const p={},o=t(`<h3 id="引言" tabindex="-1"><a class="header-anchor" href="#引言" aria-hidden="true">#</a> 引言</h3><p>作为一名前端开发者，你是否曾有过这样的经历：一天傍晚，你坐在电脑前，盯着屏幕上跳动的代码行，忽然间，灵感如闪电般劈过。你想到一个有趣的小项目——一个小游戏，简单但不失挑战性，可以让玩家在闲暇时光中轻松一笑。于是，你拿起咖啡杯，开始了这段开发之旅。</p><p>我也是在这样一个偶然的灵感闪现中，开始了“色彩魔方挑战”的开发。这个小游戏看似简单，但其中却蕴含着丰富的逻辑和细节。从最初的构思，到代码实现，再到最终的视觉效果，每一步都充满了乐趣和挑战。在这篇博客中，我将带你深入了解这个小游戏的开发过程，分享我的经验和代码实现。无论你是想了解开发过程，还是希望从中获取灵感，这篇文章都会有所帮助。</p><h3 id="项目概述" tabindex="-1"><a class="header-anchor" href="#项目概述" aria-hidden="true">#</a> 项目概述</h3><p>“色彩魔方挑战”是一款基于 Canvas 的小游戏，玩家需要在两幅画布之间找出随机生成的颜色变化点。这款游戏不仅测试玩家的观察力，还能锻炼他们的耐心。接下来，我将详细讲解游戏的核心功能实现，包括颜色矩阵的生成、点的闪烁效果、以及画布的设置等方面。</p><h3 id="功能概述" tabindex="-1"><a class="header-anchor" href="#功能概述" aria-hidden="true">#</a> 功能概述</h3><ul><li><p><strong>生成随机色彩矩阵</strong>：创建一个充满随机颜色的矩阵，为游戏提供基础。</p></li><li><p><strong>自定义矩阵阶数</strong>：自由设置矩阵的阶数，范围从<code>2 x 2</code> 到<code>500 x 500</code>，挑战难度完全由你决定。</p></li><li><p><strong>多样配色方案</strong>：提供多种配色方案，包括经典、荧光、清新、单色、自然、高对比和潮流配色，让玩家体验不同的视觉风格。</p></li><li><p><strong>一键生成</strong>：通过简单点击，即可随机生成一个新的色彩矩阵，立即开始挑战。</p></li><li><p><strong>帮助模式</strong>：若无法找到不同的颜色，点击“帮助”按钮，系统会提供一个闪烁的提示，帮助你轻松找到目标。</p></li><li><p><strong>随机颜色变化</strong>：在矩阵中随机选择一个点并改变其颜色，增加游戏的趣味性。</p></li><li><p><strong>找出不同点</strong>：玩家需在两幅矩阵中识别出颜色不同的点，测试观察力。</p></li><li><p><strong>倒计时功能</strong>：设定时间限制，挑战超时即为失败。[待开发：视玩家反馈而定]</p></li><li><p><strong>点击次数限制</strong>：限制玩家的点击次数，在规定次数内找到不同点，提升挑战性。[待开发：视玩家反馈而定]</p></li></ul><h3 id="技术实现" tabindex="-1"><a class="header-anchor" href="#技术实现" aria-hidden="true">#</a> 技术实现</h3><p>这个程序是基于<code>Vue 3</code>和<code>TypeScript</code>开发的，使用了<code>Element Plus</code>组件库来提供<code>UI</code>元素的支持。色彩矩阵的生成和绘制主要依赖于<code>HTML5</code>的<code>Canvas</code>技术，通过<code>JavaScript</code>动态生成和绘制每一个颜色块。</p><h3 id="核心代码展示" tabindex="-1"><a class="header-anchor" href="#核心代码展示" aria-hidden="true">#</a> 核心代码展示</h3><p><strong>定义颜色和矩阵设置</strong></p><p>首先，定义了不同的配色方案，并设置了用于绘制矩阵的基本参数：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> dimension <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 设置魔方阶数</span>
<span class="token keyword">const</span> matchColor <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;classic&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 初始配色方案为经典配色</span>

<span class="token comment">// 定义配色方案</span>
<span class="token keyword">const</span> matchColorsOptions<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  classic<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#FFFFFF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFFF00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FF0000&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFA500&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#0000FF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#008000&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  glow<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#FF6EC7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FF4500&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFFF33&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#39FF14&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#1B03A3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#9400D3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  gradient<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#ADD8E6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#90EE90&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFB6C1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFFFE0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFDAB9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#E6E6FA&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  single<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#F5F5F5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#D3D3D3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#A9A9A9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#696969&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#36454F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#000000&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  nature<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#87CEEB&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#7CFC00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#F4A460&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#4682B4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#808080&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FF4500&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  contrast<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#000000&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFFFFF&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFD700&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#00FF00&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFA500&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#1E90FF&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  trend<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;#98FF98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FF7F50&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FAFAD2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#E6E6FA&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#AFEEEE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;#FFB7C5&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 获取当前选择的配色方案</span>
<span class="token keyword">const</span> currentColorScheme <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> matchColorsOptions<span class="token punctuation">[</span>matchColor<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>生成矩阵</strong></p><p>游戏的核心是生成一个随机颜色的矩阵，其中包括一个不同颜色的点。通过以下代码生成矩阵：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 生成颜色矩阵</span>
<span class="token keyword">const</span> generateMatrix <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> n <span class="token operator">=</span> dimension<span class="token punctuation">.</span>value
  <span class="token keyword">const</span> colorCount <span class="token operator">=</span> currentColorScheme<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length
  <span class="token keyword">return</span> <span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> length<span class="token operator">:</span> n <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> length<span class="token operator">:</span> n <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      currentColorScheme<span class="token punctuation">.</span>value<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> colorCount<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>绘制矩阵</strong></p><p>生成矩阵后，需要在画布上绘制它。这里使用了<code>HTML5</code>的<code>Canvas</code>技术来实现：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 绘制单个点的函数</span>
<span class="token keyword">const</span> <span class="token function-variable function">drawPoint</span> <span class="token operator">=</span> <span class="token punctuation">(</span>ctx<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> color
  ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span>x <span class="token operator">*</span> cellWidth<span class="token punctuation">,</span> y <span class="token operator">*</span> cellWidth<span class="token punctuation">,</span> cellWidth<span class="token punctuation">,</span> cellWidth<span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">0.5</span>
  ctx<span class="token punctuation">.</span><span class="token function">strokeRect</span><span class="token punctuation">(</span>x <span class="token operator">*</span> cellWidth<span class="token punctuation">,</span> y <span class="token operator">*</span> cellWidth<span class="token punctuation">,</span> cellWidth<span class="token punctuation">,</span> cellWidth<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 绘制整个矩阵的函数</span>
<span class="token keyword">const</span> <span class="token function-variable function">drawMatrix</span> <span class="token operator">=</span> <span class="token punctuation">(</span>ctx<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">,</span> matrix<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> n <span class="token operator">=</span> dimension<span class="token punctuation">.</span>value
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">drawPoint</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> matrix<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  ctx<span class="token punctuation">.</span><span class="token function">strokeRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvasWidth<span class="token punctuation">,</span> canvasWidth<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>生成不同颜色的点</strong></p><p>为了增加游戏的挑战性，在矩阵中随机生成一个不同颜色的点：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 生成随机点</span>
<span class="token keyword">const</span> <span class="token function-variable function">randomPoint</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> dimension<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  y<span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> dimension<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 生成随机颜色</span>
<span class="token keyword">const</span> randomColor <span class="token operator">=</span> <span class="token punctuation">(</span>oldColor<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> newColor
  <span class="token keyword">do</span> <span class="token punctuation">{</span>
    newColor <span class="token operator">=</span> currentColorScheme<span class="token punctuation">.</span>value<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> currentColorScheme<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>newColor <span class="token operator">===</span> oldColor<span class="token punctuation">)</span>
  <span class="token keyword">return</span> newColor
<span class="token punctuation">}</span>

<span class="token comment">// 生成新的魔方图案</span>
<span class="token keyword">const</span> <span class="token function-variable function">bindGenerate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">setupCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

  <span class="token keyword">const</span> leftCtx <span class="token operator">=</span> LeftRefCanvas<span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span>
  <span class="token keyword">const</span> rightCtx <span class="token operator">=</span> RightRefCanvas<span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span>

  matrix <span class="token operator">=</span> <span class="token function">generateMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">drawMatrix</span><span class="token punctuation">(</span>leftCtx<span class="token punctuation">,</span> matrix<span class="token punctuation">)</span>

  point <span class="token operator">=</span> <span class="token function">randomPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span> <span class="token operator">=</span> point
  matrix<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">randomColor</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token function">drawMatrix</span><span class="token punctuation">(</span>rightCtx<span class="token punctuation">,</span> matrix<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>帮助功能：闪烁提示</strong></p><p>为了帮助玩家找到不同颜色的点，加入了闪烁提示功能：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">bindHelp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>RightRefCanvas<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span>

  <span class="token keyword">const</span> rightCtx <span class="token operator">=</span> RightRefCanvas<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token operator">!</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span> <span class="token operator">=</span> point
  <span class="token keyword">const</span> color <span class="token operator">=</span> matrix<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>

  <span class="token keyword">let</span> isBlack <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">const</span> <span class="token function-variable function">blinkEffect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">drawPoint</span><span class="token punctuation">(</span>rightCtx<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> isBlack <span class="token operator">?</span> <span class="token string">&#39;black&#39;</span> <span class="token operator">:</span> color<span class="token punctuation">)</span>
    isBlack <span class="token operator">=</span> <span class="token operator">!</span>isBlack
  <span class="token punctuation">}</span>

  <span class="token function">blinkEffect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  timerId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>blinkEffect<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h3><p>色彩魔方挑战不仅仅是一款游戏，更是对你视觉敏锐度的极致考验。通过不断的挑战，你会发现自己对色彩的感知能力逐渐增强。在闲暇时光里，来一局色彩魔方挑战，享受视觉与智力的双重愉悦吧！</p><p><strong>立即开始挑战！</strong></p><p>https://code.juejin.cn/pen/7402551912140111923</p><p>欢迎在评论区分享你对这款游戏的看法和高分经验，期待听到你的反馈！</p>`,30),e=[o];function c(l,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","Vue3ColorCubeGame.html.vue"]]);export{r as default};
