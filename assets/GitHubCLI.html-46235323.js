import{_ as s,p as r,q as l,s as t,t as d,R as o,Y as c,n as u}from"./framework-c56ab46b.js";const i={},n=t("p",null,[t("img",{src:"https://raw.githubusercontent.com/chnjames/cloudImg/main/blog/202311151346939.png",alt:"image-20231115134648335"})],-1),h={href:"https://cli.github.com/",target:"_blank",rel:"noopener noreferrer"},g=t("code",null,"GitHub CLI",-1),a=t("code",null,"gh",-1),b=t("code",null,"GitHub",-1),p=c("<p>使用<code>GitHub CLI</code>，开发者可以从命令行检查<code>GitHub</code>问题和拉取请求的状态，搜索特定的问题或拉取请求，创建/分叉存储库，或直接从命令行创建新问题和拉取请求。</p><p>在这篇文章中，我们将介绍一些常见的日常开发者工作流程。在这个过程中，我们将重点关注如何使用<code>GitHub CLI</code> 管理我们的问题和拉取请求。</p><p><strong>什么是 <code>GitHub CLI</code>？</strong></p><p><code>GitHub CLI</code>最好被描述为“从命令行访问的<code>GitHub</code>”。</p>",4),q=t("code",null,"GitHub CLI",-1),_={href:"https://github.com/cli/cli/releases/tag/v2.39.1",target:"_blank",rel:"noopener noreferrer"},G=t("code",null,"v2.39.1",-1),H=t("code",null,"GitHub",-1),I=c("<ol><li><p><strong>Issues（问题）:</strong> 允许你检查、创建和管理<code>GitHub</code>仓库中的问题。</p></li><li><p><strong>Pull Requests（拉取请求）:</strong> 允许你查看、创建和管理拉取请求，这是贡献代码变更的主要方式。</p></li><li><p><strong>Repositories（存储库）:</strong> 允许你创建、复制和管理<code>GitHub</code>仓库。</p></li></ol>",1),L=t("code",null,"GitHub CLI",-1),C={href:"https://cli.github.com/manual/",target:"_blank",rel:"noopener noreferrer"},m=c("<ul><li><p><strong>create（创建）:</strong> 创建新的问题或拉取请求。</p></li><li><p><strong>list（列表）:</strong> 列出问题、拉取请求或存储库。</p></li><li><p><strong>status（状态）:</strong> 查看问题或拉取请求的状态。</p></li><li><p><strong>view（查看）:</strong> 查看详细信息，可能是问题、拉取请求或存储库的详细信息。</p></li><li><p><strong>checkout（仅限拉取请求）:</strong> 签出（切换到）特定的拉取请求。</p></li><li><p><strong>clone（仅限存储库）:</strong> 克隆特定的存储库。</p></li><li><p><strong>fork（仅限存储库）:</strong> 复制存储库以创建一个分支（fork）。</p></li></ul><p>正如之前提到的，在本文中，我们将仅关注与问题和拉取请求相关的命令。这些命令允许开发者通过命令行轻松地管理和与<code>GitHub</code>上的问题和拉取请求交互。</p><p><strong>使用 <code>GitHub CLI</code> 管理 <code>GitHub</code> 问题</strong></p><p>如果在你的开发流程中经常需要处理 <code>GitHub</code> 问题，那么 <code>GitHub CLI</code> 可能有一些对你有帮助的命令。让我们来看看典型的工作日可能是什么样子，重点介绍使用 <code>GitHub CLI</code> 处理 <code>GitHub</code> 问题的一些示例。</p><ul><li><p><strong>列出 <code>GitHub CLI</code> 的问题</strong></p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>列出项目中的所有问题</td><td><code>gh issue list</code></td></tr><tr><td>列出项目中的所有问题，包括已关闭的。<code>&quot;all&quot;</code> 表示列出所有状态的问题</td><td><code>gh issue list --state &quot;all&quot;</code>(或<code>gh issue list -s &quot;all&quot;</code>)</td></tr><tr><td>列出所有分配给特定用户（&quot;<code>n8ebel</code>&quot;）的项目中的问题</td><td><code>gh issue list --assignee &quot;n8ebel&quot;</code>(或 <code>gh issue list -a &quot;n8ebel&quot;</code>)</td></tr></tbody></table></li><li><p><strong>使用 <code>GitHub CLI</code> 检查问题状态</strong></p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>显示项目中相关问题的状态</td><td><code>gh issue status</code></td></tr><tr><td>列出项目中所有已关闭的问题</td><td><code>gh issue list --state &quot;closed&quot;</code>(或 <code>gh issue list -s &quot;closed&quot;</code>)</td></tr><tr><td>列出项目中带有特定标签（&quot;<code>bug</code>&quot;）的问题</td><td><code>gh issue list --label &quot;bug&quot;</code>(或 <code>gh issue list -l &quot;bug&quot;</code>)</td></tr></tbody></table></li><li><p><strong>使用 <code>GitHub CLI</code> 查看问题</strong></p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>查看项目中特定问题的详细信息，其中 <code>15</code> 是问题的编号</td><td><code>gh issue view 15</code></td></tr><tr><td>列出项目中由指定用户（&quot;<code>n8bel</code>&quot;）负责且带有特定标签（&quot;<code>bug</code>&quot;）的问题</td><td><code>gh issue list -a &quot;n8bel&quot; -l &quot;bug&quot;</code></td></tr></tbody></table></li><li><p><strong>使用 <code>GitHub CLI</code> 创建问题</strong></p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>创建新问题</td><td><code>gh issue create</code></td></tr><tr><td>创建一个标题为 &quot;<code>title</code>&quot;，正文为 &quot;<code>description</code>&quot; 的新问题</td><td><code>gh issue create -t &quot;title&quot; -b &quot;description&quot;</code></td></tr><tr><td>用于在浏览器中通过 <code>GitHub</code> 网页界面创建新问题</td><td><code>gh issue create --web</code></td></tr></tbody></table></li></ul><p><strong>使用 <code>GitHub CLI</code> 管理拉取请求</strong></p><ul><li><p><strong>列出拉取请求</strong></p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>列出项目中所有拉取请求</td><td><code>gh pr list</code></td></tr><tr><td>列出项目中所有拉取请求，包括打开的和关闭的</td><td><code>gh pr list --state all</code>(或 <code>gh pr list -s &quot;all&quot;</code>)</td></tr><tr><td>列出由特定用户（<code>assignee</code>）负责的拉取请求</td><td><code>gh pr list --assignee &quot;n8ebel&quot;</code>(或 <code>gh pr list -a &quot;n8ebel&quot;</code>)</td></tr></tbody></table></li><li><p><strong>检查拉取请求状态</strong></p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>列出所有状态的拉取请求</td><td><code>gh pr status</code></td></tr><tr><td>列出所有已关闭的拉取请求</td><td><code>gh pr list --state &quot;closed&quot;</code>(或<code>gh pr list -s &quot;closed&quot;</code>)</td></tr><tr><td>列出所有带有 &quot;<code>bug</code>&quot; 标签的拉取请求</td><td><code>gh pr list --label &quot;bug&quot;</code>(或<code>gh pr list -l &quot;bug&quot;</code>)</td></tr></tbody></table></li><li><p><strong>查看拉取请求</strong></p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>列出拉取请求编号为 14 的详细信息</td><td><code>gh pr view 14</code></td></tr><tr><td>列出由用户 &quot;<code>n8bel</code>&quot; 创建且带有 &quot;<code>bug</code>&quot; 标签的所有拉取请求</td><td><code>gh pr list -a &quot;n8bel&quot; -l &quot;bug&quot;</code></td></tr></tbody></table></li><li><p><strong>创建拉取请求</strong></p><table><thead><tr><th>描述</th><th>命令</th></tr></thead><tbody><tr><td>创建新拉取请求</td><td><code>gh pr create</code></td></tr><tr><td>创建一个标题为 &quot;<code>title</code>&quot;，正文为 &quot;<code>description</code>&quot; 的新拉取请求</td><td><code>gh pr create -t &quot;title&quot; -b &quot;description&quot;</code></td></tr><tr><td>用于通过网页界面创建新拉取请求</td><td><code>gh pr create --web</code></td></tr><tr><td>检出与拉取请求编号为 <code>14</code> 相关的拉取请求，包括来自分叉的拉取请求</td><td><code>gh pr checkout 14</code></td></tr></tbody></table></li></ul><p>通过使用 <code>GitHub CLI</code>，开发者可以在不离开终端的情况下，更加高效地处理项目的问题和拉取请求，从而提高开发工作流的整体效率。</p>",8);function y(f,k){const e=u("ExternalLinkIcon");return r(),l("div",null,[n,t("p",null,[t("a",h,[g,d(e)]),o("（或"),a,o("）是 "),b,o(" 的命令行界面，可在终端或脚本中使用。")]),p,t("p",null,[o("目前，"),q,o(" 的版本为 "),t("a",_,[G,d(e)]),o("。它主要围绕三个"),H,o("项目的功能组成：")]),I,t("p",null,[o("使用"),L,o("，开发者可以执行以下与不同工件相关的"),t("a",C,[o("命令"),d(e)]),o("：")]),m])}const w=s(i,[["render",y],["__file","GitHubCLI.html.vue"]]);export{w as default};
