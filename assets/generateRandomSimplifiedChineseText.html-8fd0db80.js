import{_ as e,p,q as o,s as n,R as s,t as c,Y as a,n as l}from"./framework-c56ab46b.js";const i={},u=a(`<h4 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> <strong>背景</strong></h4><p>在前端开发中，有时需要生成随机的中文字符用于测试或其他用途。为了满足这种需求，我们可以使用<code>Unicode码</code>和<code>GBK2312</code>编码来生成随机的中文字符。<code>Unicode码</code>包含了大量的汉字字符，而<code>GBK2312</code>编码则包含了常用的汉字字符，这两种编码方式都能够满足不同的需求。</p><h4 id="unicode码" tabindex="-1"><a class="header-anchor" href="#unicode码" aria-hidden="true">#</a> <code>Unicode码</code></h4><p>在<code>unicode</code>码中，汉字的范围是<code>(0x4E00, 9FBF)</code>。</p><p><code>unicode</code>码中收录了2万多个汉字，包含很多生僻的繁体字。</p><p><strong>示例一</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 生成随机长度的中文文本 Unicode码
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">minLength</span> - 生成文本的最小长度
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">maxLength</span> - 生成文本的最大长度
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> - 生成的中文文本
 */</span>
<span class="token function">generateRandomSimplifiedChineseText</span><span class="token punctuation">(</span><span class="token parameter">minLength<span class="token punctuation">,</span> maxLength</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> simplifiedChineseStart <span class="token operator">=</span> <span class="token number">0x4e00</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> simplifiedChineseEnd <span class="token operator">=</span> <span class="token number">0x9fbf</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> textLength <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>maxLength <span class="token operator">-</span> minLength <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> minLength<span class="token punctuation">;</span>
  <span class="token keyword">let</span> generatedText <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> textLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> randomUnicode <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>simplifiedChineseEnd <span class="token operator">-</span> simplifiedChineseStart <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> simplifiedChineseStart<span class="token punctuation">;</span>
    generatedText <span class="token operator">+=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>randomUnicode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> generatedText<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例二</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 生成指定长度范围内的随机中文字符 Unicode码
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">minLength</span> - 生成字符的最小长度
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">maxLength</span> - 生成字符的最大长度
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> - 生成的随机中文字符串
 */</span>
<span class="token function">randomlyGeneratedChineseCharacters</span><span class="token punctuation">(</span><span class="token parameter">minLength<span class="token punctuation">,</span> maxLength</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> chineseStart <span class="token operator">=</span> <span class="token number">19968</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> chineseEnd <span class="token operator">=</span> <span class="token number">40869</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> textLength <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>maxLength <span class="token operator">-</span> minLength <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> minLength<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> textLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> str<span class="token punctuation">;</span>
    <span class="token comment">// 生成随机的简体中文字符的Unicode码点，范围为 chineseStart 到 chineseEnd</span>
    str <span class="token operator">=</span> <span class="token string">&#39;\\\\u&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>chineseEnd <span class="token operator">-</span> chineseStart <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> chineseStart<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 对Unicode编码进行解码，将其转换为字符</span>
    str <span class="token operator">=</span> <span class="token function">unescape</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\\\u</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;%u&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> chinese <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> chinese<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gbk2312" tabindex="-1"><a class="header-anchor" href="#gbk2312" aria-hidden="true">#</a> <code>GBK2312</code></h3><p><code>GBK2312</code>对字符的编码采用两个字节相组合，第一字节范围是<code>0xB0-0xF7</code>, 第二字节范围是<code>0xA1-0xFE</code>，<code>GBK2312</code>共收录了6千多常用汉字。</p><p><u>注意：对于55区，<code>D7FA-D7FE</code>的5个是没有编码的，需要在两个字节范围中剔除。</u></p>`,12),r=n("code",null,"GBK2312",-1),k={href:"http://tools.jb51.net/table/gb2312",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"GBK2312",-1),m=a(`<p><strong>示例</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 生成指定长度范围内的随机中文字符，使用 GBK2312 编码
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">minLength</span> - 生成字符的最小长度
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">maxLength</span> - 生成字符的最大长度
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> - 生成的随机中文字符串
 */</span>
<span class="token function">generateSimplifiedChineseGBK2312</span><span class="token punctuation">(</span><span class="token parameter">minLength<span class="token punctuation">,</span> maxLength</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> textLength <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>maxLength <span class="token operator">-</span> minLength <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> minLength<span class="token punctuation">;</span>
  <span class="token keyword">let</span> generatedText <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> textLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 在 GBK2312 字符范围内生成随机的头部（head）和主体（body）值</span>
    <span class="token keyword">const</span> head <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">0xF7</span> <span class="token operator">-</span> <span class="token number">0xB0</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0xB0</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> body <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">0xF9</span> <span class="token operator">-</span> <span class="token number">0xA1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0xA1</span><span class="token punctuation">;</span>
    <span class="token comment">// 使用头部和主体值创建一个字符字符串</span>
    <span class="token keyword">const</span> char <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>head<span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建一个 TextEncoder 实例以将字符编码为字节</span>
    <span class="token keyword">const</span> encoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 使用 &#39;gb2312&#39; 编码创建一个 TextDecoder 实例以解码字节</span>
    <span class="token keyword">const</span> decoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextDecoder</span><span class="token punctuation">(</span><span class="token string">&#39;gb2312&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 将字符编码为字节，然后解码为字符串</span>
    <span class="token keyword">const</span> valBuffer <span class="token operator">=</span> encoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> str <span class="token operator">=</span> decoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>valBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    generatedText <span class="token operator">+=</span> str<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> generatedText<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="简繁体转换方法" tabindex="-1"><a class="header-anchor" href="#简繁体转换方法" aria-hidden="true">#</a> 简繁体转换方法</h4><p>如果需要在生成的文本中进行简繁体转换，可以使用第三方库<code>chinese-s2t</code>。这个库提供了简体到繁体和繁体到简体的转换功能，方便在不同场景下使用不同的文本。</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>npm install chinese-s2t
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>引用示例</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> Chinese <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;chinese-s2t&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 简体转繁体</span>
Chinese<span class="token punctuation">.</span><span class="token function">s2t</span><span class="token punctuation">(</span><span class="token string">&#39;简体转繁体&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 繁体转简体</span>
Chinese<span class="token punctuation">.</span><span class="token function">t2s</span><span class="token punctuation">(</span><span class="token string">&#39;繁体转简体&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> simplifiedText <span class="token operator">=</span> <span class="token string">&#39;简体字&#39;</span> <span class="token comment">// Input: ‘简体字’</span>

<span class="token keyword">const</span> traditionalText <span class="token operator">=</span> Chinese<span class="token punctuation">.</span><span class="token function">s2t</span><span class="token punctuation">(</span>simplifiedText<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>traditionalText<span class="token punctuation">)</span> <span class="token comment">// Output: &#39;繁體字&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h4><p>在前端开发中，生成随机中文字符是一项常见的需求。通过使用<code>Unicode码</code>和<code>GBK2312</code>编码，我们可以满足不同的需求，并生成符合特定编码方式的中文文本。同时，简繁体转换也可以帮助我们在不同的场景中使用生成的文本。通过这些技巧，前端开发人员可以更轻松地处理中文文本生成的任务。</p>`,9);function v(b,h){const t=l("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[s("对于"),r,s("的更多内容请参考："),n("a",k,[d,c(t)])]),m])}const f=e(i,[["render",v],["__file","generateRandomSimplifiedChineseText.html.vue"]]);export{f as default};
